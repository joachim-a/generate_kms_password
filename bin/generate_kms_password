function showHelp() {
  echo "Error: Missing required parameters."
  echo ""
  echo "Usage:"
  echo "  ./bin/generate_password.sh <encryption_context> <encryption_key_id>"
  echo ""
  echo "  Example: ./bin/generate_password.sh environment=my_env,application=my_app,username=my_username 111-22222-333333333"
  echo "  Creates:"
  echo "    password.plain_text (contains the plaintext password)"
  echo "    password.plain_text.encrypted_base64 (use the contents for your terraform aws_kms_secrets payload)"
}

function generateRandomString() {
  openssl rand -base64 600 | sed 's/[/+=\]//g' | awk '{printf $0""}' | head -c30
}

function encrypt() {
  plaintext_file=$1
  encryption_context=$2
  encryption_key_id=$3

  echo encryption_context=$encryption_context
  aws kms encrypt --plaintext fileb://$plaintext_file --key-id $encryption_key_id --encryption-context $encryption_context --output text --query CiphertextBlob > $plaintext_file.encrypted_base64
}

function decrypt() {
  encrypted_base64_file=$1
  encryption_context=$2

  decoded_encrypted_file=$encrypted_base64_file.decoded
  cat $encrypted_base64_file | base64 --decode > $decoded_encrypted_file

  aws kms decrypt --ciphertext-blob fileb://$decoded_encrypted_file --encryption-context $encryption_context --output text --query Plaintext | base64 --decode
}

if [ $# -ne 2 ]; then
  showHelp
  exit 1
fi

encryption_context=$1
key=$2

generateRandomString > password.plain_text
encrypt password.plain_text $encryption_context $key
decrypt password.plain_text.encrypted_base64 $encryption_context > password.plain_text.validation

diff password.plain_text password.plain_text.validation
